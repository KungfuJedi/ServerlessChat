service: Serverless.Chat

provider:
  name: aws
  runtime: dotnetcore2.1
  stage: ${opt:stage, 'dev'}
  region: ap-southeast-2
  stackName: ServerlessChat-${opt:stage}
  apiName: ServerlessChat-${opt:stage}
  memorySize: 1024
  logRetentionInDays: 1
  environment:
    environment: ${opt:stage}
  tracing:
    apiGateway: true
    lambda: true

package:
  individually: false
  artifact: bin/release/netcoreapp2.1/chatFunctions.zip

functions:
  getMessagesFunction:
    name: ${opt:stage}-ServerlessChat-GetRecentMessages
    handler: Serverless.Chat::Serverless.Chat.ChatFunctions::GetRecentMessages
    role: GetMessagesRole
    events:
      - http:
          path: messages
          method: get 

resources:
  Resources:
    GetMessagesRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${opt:stage}-ServerlessChat-GetRecentMessages
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: ${opt:stage}-ServerlessChat-GetRecentMessages
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - dynamodb:Scan
                    - dynamodb:DescribeTable
                  Resource:
                    - 'Fn::Join':
                      - ':'
                      - 
                        - arn:aws:dynamodb
                        - Ref: AWS::Region
                        - Ref: AWS::AccountId
                        - table/${opt:stage}-ServerlessChat-Messages
                - Effect: Allow
                  Action:
                    - xray:PutTraceSegments
                    - xray:PutTelemetryRecords
                  Resource: '*'
                - Effect: Allow
                  Action:
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource: /aws/lambda/${opt:stage}-ServerlessChat-GetRecentMessages

    MessagesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${opt:stage}-ServerlessChat-Messages
        AttributeDefinitions:
          - AttributeName: MessageId
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: MessageId
            KeyType: HASH
        TimeToLiveSpecification:
          AttributeName: ExpiresOnUtc
          Enabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES