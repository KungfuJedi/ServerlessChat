service: Serverless.Chat

provider:
  name: aws
  runtime: dotnetcore2.1
  stage: ${opt:stage, 'dev'}
  region: ap-southeast-2
  stackName: ServerlessChat-${opt:stage}
  apiName: ServerlessChat-${opt:stage}
  memorySize: 1024
  logRetentionInDays: 1
  environment:
    environment: ${opt:stage}
  tracing:
    apiGateway: true
    lambda: true

package:
  individually: false
  artifact: bin/release/netcoreapp2.1/chatFunctions.zip

functions:
  signInFunction:
    name: ${opt:stage}-ServerlessChat-SignIn
    handler: Serverless.Chat::Serverless.Chat.ChatFunctions::SignIn
    role: SignInRole
    events:
      - http:
          path: sign-in
          method: post
          cors:
            origin: '*'

  sendMessageFunction:
    name: ${opt:stage}-ServerlessChat-SendMessage
    handler: Serverless.Chat::Serverless.Chat.ChatFunctions::SendMessage
    role: SendMessageRole
    events:
      - http:
          path: message
          method: post
          cors:
            origin: '*'

  registerConnectionFunction:
    name: ${opt:stage}-ServerlessChat-RegisterConnection
    handler: Serverless.Chat::Serverless.Chat.ChatFunctions::RegisterConnection
    role: RegisterConnectionRole
    events:
      - websocket: register

  messageUpdatedFunction:
    name: ${opt:stage}-ServerlessChat-MessageUpdated
    handler: Serverless.Chat::Serverless.Chat.ChatFunctions::MessageUpdated
    role: MessageUpdatedRole
    environment:
      ws_id: !Ref WebsocketsApi
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt: [MessagesTable, StreamArn]

  userUpdatedFunction:
    name: ${opt:stage}-ServerlessChat-UserUpdated
    handler: Serverless.Chat::Serverless.Chat.ChatFunctions::UserUpdated
    role: UserUpdatedRole
    environment:
      ws_id: !Ref WebsocketsApi
      updateUserConnectionList_queue_url: !Ref UserConnectionListUpdateQueue
    events:
      - stream:
          type: dynamodb
          arn:
            Fn::GetAtt: [UsersTable, StreamArn]

  updateUserConnectionListFunction:
    name: ${opt:stage}-ServerlessChat-UpdateUserConnectionList
    handler: Serverless.Chat::Serverless.Chat.ChatFunctions::UpdateUserConnectionList
    role: UpdateUserConnectionListRole
    events:
      - sqs:
          arn:
            Fn::GetAtt: [UserConnectionListUpdateQueue, Arn]

resources:
  Resources:
    SignInRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${opt:stage}-ServerlessChat-SignIn
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: ${opt:stage}-ServerlessChat-SignIn
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - dynamodb:PutItem
                    - dynamodb:UpdateItem
                    - dynamodb:DescribeTable
                  Resource:
                    - 'Fn::Join':
                      - ':'
                      - 
                        - arn:aws:dynamodb
                        - Ref: AWS::Region
                        - Ref: AWS::AccountId
                        - table/${opt:stage}-ServerlessChat-Users
                - Effect: Allow
                  Action:
                    - xray:PutTraceSegments
                    - xray:PutTelemetryRecords
                  Resource: '*'
                - Effect: Allow
                  Action:
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - arn:aws:logs:*:*:log-group:/aws/lambda/${opt:stage}-ServerlessChat-SignIn
                    - arn:aws:logs:*:*:log-group:/aws/lambda/${opt:stage}-ServerlessChat-SignIn:log-stream:*

    SendMessageRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${opt:stage}-ServerlessChat-SendMessage
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: ${opt:stage}-ServerlessChat-SendMessage
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - dynamodb:PutItem
                    - dynamodb:UpdateItem
                    - dynamodb:DescribeTable
                  Resource:
                    - 'Fn::Join':
                      - ':'
                      - 
                        - arn:aws:dynamodb
                        - Ref: AWS::Region
                        - Ref: AWS::AccountId
                        - table/${opt:stage}-ServerlessChat-Messages
                - Effect: Allow
                  Action:
                    - dynamodb:GetItem
                    - dynamodb:DescribeTable
                  Resource:
                    - 'Fn::Join':
                      - ':'
                      - 
                        - arn:aws:dynamodb
                        - Ref: AWS::Region
                        - Ref: AWS::AccountId
                        - table/${opt:stage}-ServerlessChat-Users
                - Effect: Allow
                  Action:
                    - xray:PutTraceSegments
                    - xray:PutTelemetryRecords
                  Resource: '*'
                - Effect: Allow
                  Action:
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - arn:aws:logs:*:*:log-group:/aws/lambda/${opt:stage}-ServerlessChat-SendMessage
                    - arn:aws:logs:*:*:log-group:/aws/lambda/${opt:stage}-ServerlessChat-SendMessage:log-stream:*

    ConnectRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${opt:stage}-ServerlessChat-Connect
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: ${opt:stage}-ServerlessChat-Connect
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - dynamodb:GetItem
                    - dynamodb:PutItem
                    - dynamodb:UpdateItem
                    - dynamodb:DescribeTable
                  Resource:
                    - 'Fn::Join':
                      - ':'
                      - 
                        - arn:aws:dynamodb
                        - Ref: AWS::Region
                        - Ref: AWS::AccountId
                        - table/${opt:stage}-ServerlessChat-Users
                - Effect: Allow
                  Action:
                    - xray:PutTraceSegments
                    - xray:PutTelemetryRecords
                  Resource: '*'
                - Effect: Allow
                  Action:
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - arn:aws:logs:*:*:log-group:/aws/lambda/${opt:stage}-ServerlessChat-Connect
                    - arn:aws:logs:*:*:log-group:/aws/lambda/${opt:stage}-ServerlessChat-Connect:log-stream:*

    RegisterConnectionRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${opt:stage}-ServerlessChat-RegisterConnection
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: ${opt:stage}-ServerlessChat-RegisterConnection
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - dynamodb:GetItem
                    - dynamodb:PutItem
                    - dynamodb:UpdateItem
                    - dynamodb:DescribeTable
                  Resource:
                    - 'Fn::Join':
                      - ':'
                      - 
                        - arn:aws:dynamodb
                        - Ref: AWS::Region
                        - Ref: AWS::AccountId
                        - table/${opt:stage}-ServerlessChat-Users
                - Effect: Allow
                  Action:
                    - xray:PutTraceSegments
                    - xray:PutTelemetryRecords
                  Resource: '*'
                - Effect: Allow
                  Action:
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - arn:aws:logs:*:*:log-group:/aws/lambda/${opt:stage}-ServerlessChat-RegisterConnection
                    - arn:aws:logs:*:*:log-group:/aws/lambda/${opt:stage}-ServerlessChat-RegisterConnection:log-stream:*

    MessageUpdatedRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${opt:stage}-ServerlessChat-MessageUpdated
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: ${opt:stage}-ServerlessChat-MessageUpdated
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - dynamodb:DescribeTable
                    - dynamodb:DeleteItem
                  Resource:
                    - 'Fn::Join':
                      - ':'
                      - 
                        - arn:aws:dynamodb
                        - Ref: AWS::Region
                        - Ref: AWS::AccountId
                        - table/${opt:stage}-ServerlessChat-Users
                - Effect: Allow
                  Action:
                    - dynamodb:DescribeTable
                    - dynamodb:GetItem
                  Resource:
                    - 'Fn::Join':
                      - ':'
                      - 
                        - arn:aws:dynamodb
                        - Ref: AWS::Region
                        - Ref: AWS::AccountId
                        - table/${opt:stage}-ServerlessChat-UserConnectionMappings
                - Effect: Allow
                  Action:
                    - dynamodb:DescribeStream
                    - dynamodb:GetRecords
                    - dynamodb:GetShardIterator
                    - dynamodb:ListStreams
                  Resource:
                    - 'Fn::Join':
                      - ':'
                      - 
                        - arn:aws:dynamodb
                        - Ref: AWS::Region
                        - Ref: AWS::AccountId
                        - table/${opt:stage}-ServerlessChat-Messages/stream/*
                - Effect: Allow
                  Action:
                    - xray:PutTraceSegments
                    - xray:PutTelemetryRecords
                  Resource: '*'
                - Effect: Allow
                  Action:
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - arn:aws:logs:*:*:log-group:/aws/lambda/${opt:stage}-ServerlessChat-MessageUpdated
                    - arn:aws:logs:*:*:log-group:/aws/lambda/${opt:stage}-ServerlessChat-MessageUpdated:log-stream:*
                - Effect: Allow
                  Action:
                    - execute-api:ManageConnections
                  Resource:
                    - '*'

    UserUpdatedRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${opt:stage}-ServerlessChat-UserUpdated
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: ${opt:stage}-ServerlessChat-UserUpdated
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - dynamodb:DescribeTable
                    - dynamodb:DeleteItem
                  Resource:
                    - 'Fn::Join':
                      - ':'
                      - 
                        - arn:aws:dynamodb
                        - Ref: AWS::Region
                        - Ref: AWS::AccountId
                        - table/${opt:stage}-ServerlessChat-Users
                - Effect: Allow
                  Action:
                    - dynamodb:DescribeTable
                    - dynamodb:GetItem
                  Resource:
                    - 'Fn::Join':
                      - ':'
                      - 
                        - arn:aws:dynamodb
                        - Ref: AWS::Region
                        - Ref: AWS::AccountId
                        - table/${opt:stage}-ServerlessChat-UserConnectionMappings
                - Effect: Allow
                  Action:
                    - dynamodb:DescribeStream
                    - dynamodb:GetRecords
                    - dynamodb:GetShardIterator
                    - dynamodb:ListStreams
                  Resource:
                    - 'Fn::Join':
                      - ':'
                      - 
                        - arn:aws:dynamodb
                        - Ref: AWS::Region
                        - Ref: AWS::AccountId
                        - table/${opt:stage}-ServerlessChat-Users/stream/*
                - Effect: Allow
                  Action:
                    - xray:PutTraceSegments
                    - xray:PutTelemetryRecords
                  Resource: '*'
                - Effect: Allow
                  Action:
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - arn:aws:logs:*:*:log-group:/aws/lambda/${opt:stage}-ServerlessChat-UserUpdated
                    - arn:aws:logs:*:*:log-group:/aws/lambda/${opt:stage}-ServerlessChat-UserUpdated:log-stream:*
                - Effect: Allow
                  Action:
                    - execute-api:ManageConnections
                  Resource:
                    - '*'
                - Effect: Allow
                  Action:
                    - sqs:SendMessage
                  Resource:
                    - Fn::GetAtt: [UserConnectionListUpdateQueue, Arn]

    UpdateUserConnectionListRole:
      Type: AWS::IAM::Role
      Properties:
        RoleName: ${opt:stage}-ServerlessChat-UpdateUserConnectionList
        AssumeRolePolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Principal:
                Service:
                  - lambda.amazonaws.com
              Action: sts:AssumeRole
        Policies:
          - PolicyName: ${opt:stage}-ServerlessChat-UpdateUserConnectionList
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
                - Effect: Allow
                  Action:
                    - dynamodb:DescribeTable
                    - dynamodb:GetItem
                    - dynamodb:UpdateItem
                  Resource:
                    - 'Fn::Join':
                      - ':'
                      - 
                        - arn:aws:dynamodb
                        - Ref: AWS::Region
                        - Ref: AWS::AccountId
                        - table/${opt:stage}-ServerlessChat-UserConnectionMappings
                - Effect: Allow
                  Action:
                    - xray:PutTraceSegments
                    - xray:PutTelemetryRecords
                  Resource: '*'
                - Effect: Allow
                  Action:
                    - logs:CreateLogStream
                    - logs:PutLogEvents
                  Resource:
                    - arn:aws:logs:*:*:log-group:/aws/lambda/${opt:stage}-ServerlessChat-UpdateUserConnectionList
                    - arn:aws:logs:*:*:log-group:/aws/lambda/${opt:stage}-ServerlessChat-UpdateUserConnectionList:log-stream:*
                - Effect: Allow
                  Action:
                    - sqs:DeleteMessage
                    - sqs:GetQueueAttributes
                    - sqs:ReceiveMessage
                  Resource:
                    - Fn::GetAtt: [UserConnectionListUpdateQueue, Arn]

    MessagesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${opt:stage}-ServerlessChat-Messages
        AttributeDefinitions:
          - AttributeName: MessageId
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: MessageId
            KeyType: HASH
        TimeToLiveSpecification:
          AttributeName: ExpiresOnUtc
          Enabled: true
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES

    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${opt:stage}-ServerlessChat-Users
        AttributeDefinitions:
          - AttributeName: UserId
            AttributeType: S
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: UserId
            KeyType: HASH
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES

    UserConnectionMappingsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${opt:stage}-ServerlessChat-UserConnectionMappings
        AttributeDefinitions:
          - AttributeName: Id
            AttributeType: N
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: Id
            KeyType: HASH

    UserConnectionListUpdateQueue:
      Type: AWS::SQS::Queue
      Properties:
        QueueName: ${opt:stage}-ServerlessChat-UserConnectionListUpdates.fifo
        FifoQueue: true
        ContentBasedDeduplication: true